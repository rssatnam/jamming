{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/LoadingScreen/LoadingScreen.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","search","bind","handleTermChange","this","onSearch","e","setState","target","value","className","onChange","placeholder","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artists","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistName","playlistTracks","onSave","LoadingScreen","style","isLoading","display","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","fetch","headers","Authorization","then","response","json","jsonResponse","items","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","updatePlaylistName","find","savedTrack","push","filter","currentTrack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f51a80ad.chunk.js","sourcesContent":["const clientID = \"cf758774d4f245c99a41b69725f98df5\";\r\n// const redirectURI = \"http://vigorous-temper.surge.sh/\";\r\nconst redirectURI = \"http://localhost:3000/\";\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n  getAccessToken() {\r\n    if (accessToken) {\r\n      return accessToken;\r\n    }\r\n\r\n    // check for access token match\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenMatch && expiresInMatch) {\r\n      accessToken = accessTokenMatch[1];\r\n      const expiresIn = Number(expiresInMatch[1]);\r\n      // This clears the parameters, allowing us to grab a new access token when it expires\r\n      setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\r\n      window.history.pushState(\"Access Token\", null, \"/\");\r\n      return accessToken;\r\n    } else {\r\n      window.location = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\r\n    }\r\n  },\r\n  search(term) {\r\n    const accessToken = Spotify.getAccessToken();\r\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        if (!jsonResponse.tracks) {\r\n          return [];\r\n        }\r\n        return jsonResponse.tracks.items.map((track) => ({\r\n          id: track.id,\r\n          name: track.name,\r\n          artists: track.artists[0].name,\r\n          album: track.album.name,\r\n          uri: track.uri,\r\n        }));\r\n      });\r\n  },\r\n\r\n  savePlaylist(name, trackUris) {\r\n    if (!name || !trackUris.length) {\r\n      return;\r\n    }\r\n\r\n    const accessToken = Spotify.getAccessToken();\r\n    const headers = {\r\n      Authorization: `Bearer ${accessToken}`,\r\n    };\r\n    let userId;\r\n\r\n    return fetch(\"https://api.spotify.com/v1/me\", {\r\n      headers: headers,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        userId = jsonResponse.id;\r\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n          headers: headers,\r\n          method: \"POST\",\r\n          body: JSON.stringify({ name: name }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((jsonResponse) => {\r\n            const playlistId = jsonResponse.id;\r\n            return fetch(\r\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n              {\r\n                headers: headers,\r\n                method: \"POST\",\r\n                body: JSON.stringify({ uris: trackUris }),\r\n              }\r\n            );\r\n          });\r\n      });\r\n  },\r\n};\r\n\r\nexport default Spotify;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: \"\",\r\n    };\r\n\r\n    this.search = this.search.bind(this);\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n  }\r\n\r\n  search() {\r\n    this.props.onSearch(this.state.term);\r\n  }\r\n\r\n  handleTermChange(e) {\r\n    this.setState({\r\n      term: e.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <input\r\n          onChange={this.handleTermChange}\r\n          placeholder=\"Enter A Song, Album, or Artist\"\r\n        />\r\n        <button className=\"SearchButton\" onClick={this.search}>\r\n          SEARCH\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./Track.css\";\r\n\r\nclass Track extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n  }\r\n\r\n  renderAction() {\r\n    if (this.props.isRemoval) {\r\n      return (\r\n        <button className=\"Track-action\" onClick={this.removeTrack}>\r\n          -\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"Track-action\" onClick={this.addTrack}>\r\n          +\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  addTrack(e) {\r\n    this.props.onAdd(this.props.track);\r\n  }\r\n\r\n  removeTrack(e) {\r\n    this.props.onRemove(this.props.track);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n          <h3>{this.props.track.name}</h3>\r\n          <p>\r\n            {this.props.track.artists} | {this.props.track.album}\r\n          </p>\r\n        </div>\r\n        {this.renderAction()}\r\n        {/* <button className=\"Track-action\">\r\n          \r\n        </button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport \"./TrackList.css\";\r\n\r\nimport Track from \"../Track/Track\";\r\n\r\nclass TrackList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"TrackList\">\r\n        {this.props.tracks.map((track) => {\r\n          return (\r\n            <Track\r\n              track={track}\r\n              key={track.id}\r\n              onAdd={this.props.onAdd}\r\n              onRemove={this.props.onRemove}\r\n              isRemoval={this.props.isRemoval}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackList;\r\n","import React from \"react\";\r\nimport \"./SearchResults.css\";\r\n\r\nimport TrackList from \"../TrackList/TrackList\";\r\n\r\nclass SearchResults extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"SearchResults\">\r\n        <h2>Results</h2>\r\n        {/* <!-- Add a TrackList component --> */}\r\n        <TrackList\r\n          tracks={this.props.searchResults}\r\n          onAdd={this.props.onAdd}\r\n          isRemoval={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport TrackList from \"../TrackList/TrackList\";\r\n\r\nimport \"./Playlist.css\";\r\n\r\nclass Playlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    this.props.onNameChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Playlist\">\r\n        <input\r\n          defaultValue={this.props.playlistName}\r\n          value={this.props.playlistName}\r\n          onChange={this.handleNameChange}\r\n        />\r\n        {/* <!-- Add a TrackList component --> */}\r\n        <TrackList\r\n          tracks={this.props.playlistTracks}\r\n          onRemove={this.props.onRemove}\r\n          isRemoval={true}\r\n        />\r\n        <button onClick={this.props.onSave} className=\"Playlist-save\">\r\n          SAVE TO SPOTIFY\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","import React from \"react\";\r\n\r\nimport \"./LoadingScreen.css\";\r\n\r\nclass LoadingScreen extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"loading-screen\"\r\n        style={this.props.isLoading ? { display: \"flex\" } : { display: \"none\" }}\r\n      >\r\n        <div className=\"loadingImage\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\n\r\nimport Spotify from \"../../util/Spotify\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchResults: [],\r\n      playlistName: \"New Playlist\",\r\n      playlistTracks: [],\r\n      isLoading: false,\r\n    };\r\n\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\r\n    this.savePlaylist = this.savePlaylist.bind(this);\r\n    this.search = this.search.bind(this);\r\n  }\r\n\r\n  search(term) {\r\n    Spotify.search(term).then((searchResults) => {\r\n      this.setState({\r\n        searchResults: searchResults,\r\n      });\r\n    });\r\n  }\r\n\r\n  savePlaylist() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const trackUris = this.state.playlistTracks.map((track) => track.uri);\r\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\r\n      this.setState({\r\n        playlistName: \"New Playlist\",\r\n        playlistTracks: [],\r\n        searchResults: [],\r\n        isLoading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  updatePlaylistName(playlistName) {\r\n    this.setState({ playlistName: playlistName });\r\n  }\r\n\r\n  addTrack(track) {\r\n    let tracks = this.state.playlistTracks;\r\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\r\n      return;\r\n    }\r\n\r\n    tracks.push(track);\r\n    this.setState({\r\n      playlistTracks: tracks,\r\n    });\r\n  }\r\n\r\n  removeTrack(track) {\r\n    let tracks = this.state.playlistTracks;\r\n    tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\r\n    this.setState({\r\n      playlistTracks: tracks,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LoadingScreen isLoading={this.state.isLoading} />\r\n        <h1>\r\n          Ja<span className=\"highlight\">mmm</span>ing\r\n        </h1>\r\n        <div className=\"App\">\r\n          {/* <!-- Add a SearchBar component --> */}\r\n          <SearchBar onSearch={this.search} />\r\n          <div className=\"App-playlist\">\r\n            {/* <!-- Add a SearchResults component -->*/}\r\n            <SearchResults\r\n              searchResults={this.state.searchResults}\r\n              onAdd={this.addTrack}\r\n            />\r\n            {/*<!-- Add a Playlist component --> */}\r\n            <Playlist\r\n              playlistName={this.state.playlistName}\r\n              playlistTracks={this.state.playlistTracks}\r\n              onRemove={this.removeTrack}\r\n              onNameChange={this.updatePlaylistName}\r\n              onSave={this.savePlaylist}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}